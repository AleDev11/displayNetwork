<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleWifi</name>
    </assembly>
    <members>
        <member name="P:SimpleWifi.AccessPoint.HasProfile">
            <summary>
            If the computer has a connection profile stored for this access point
            </summary>
        </member>
        <member name="P:SimpleWifi.AccessPoint.Network">
            <summary>
            Returns the underlying network object.
            </summary>
        </member>
        <member name="P:SimpleWifi.AccessPoint.Interface">
            <summary>
            Returns the underlying interface object.
            </summary>
        </member>
        <member name="M:SimpleWifi.AccessPoint.IsValidPassword(System.String)">
            <summary>
            Checks that the password format matches this access point's encryption method.
            </summary>
        </member>
        <member name="M:SimpleWifi.AccessPoint.Connect(SimpleWifi.AuthRequest,System.Boolean)">
            <summary>
            Connect synchronous to the access point.
            </summary>
        </member>
        <member name="M:SimpleWifi.AccessPoint.ConnectAsync(SimpleWifi.AuthRequest,System.Boolean,System.Action{System.Boolean})">
            <summary>
            Connect asynchronous to the access point.
            </summary>
        </member>
        <member name="M:SimpleWifi.PasswordHelper.IsValid(System.String,SimpleWifi.Win32.Interop.Dot11CipherAlgorithm)">
            <summary>
            Checks if a password is valid for a cipher type.
            </summary>
        </member>
        <member name="M:SimpleWifi.EapUserFactory.Generate(SimpleWifi.Win32.Interop.Dot11CipherAlgorithm,System.String,System.String,System.String)">
            <summary>
            Generates the EAP user XML
            </summary>
        </member>
        <member name="M:SimpleWifi.EapUserFactory.GetTemplate(System.String)">
            <summary>
            Fetches the template for an EAP user
            </summary>
        </member>
        <member name="M:SimpleWifi.ProfileFactory.Generate(SimpleWifi.Win32.Interop.WlanAvailableNetwork,System.String)">
            <summary>
            Generates the profile XML for the access point and password
            </summary>
        </member>
        <member name="M:SimpleWifi.ProfileFactory.GetTemplate(System.String)">
            <summary>
            Fetches the template for an wireless connection profile.
            </summary>
        </member>
        <member name="M:SimpleWifi.ProfileFactory.GetHexString(System.Byte[])">
            <summary>
            Converts an byte array into the hex representation, ex: [255, 255] -> "FFFF"
            </summary>
        </member>
        <member name="M:SimpleWifi.Wifi.GetAccessPoints">
            <summary>
            Returns a list over all available access points
            </summary>
        </member>
        <member name="M:SimpleWifi.Wifi.Disconnect">
            <summary>
            Disconnect all wifi interfaces
            </summary>
        </member>
        <member name="M:SimpleWifi.Win32.Helpers.WlanHelpers.GetStringForReasonCode(SimpleWifi.Win32.Interop.WlanReasonCode)">
            <summary>
            Gets a string that describes a specified reason code. NOTE: Not used!
            </summary>
            <param name="reasonCode">The reason code.</param>
            <returns>The string.</returns>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanIntfOpcode">
            <summary>
            Defines various opcodes used to set and query parameters for an interface.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_INTF_OPCODE</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.AutoconfEnabled">
            <summary>
            Opcode used to set or query whether auto config is enabled.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.BackgroundScanEnabled">
            <summary>
            Opcode used to set or query whether background scan is enabled.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.MediaStreamingMode">
            <summary>
            Opcode used to set or query the media streaming mode of the driver.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.RadioState">
            <summary>
            Opcode used to set or query the radio state.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.BssType">
            <summary>
            Opcode used to set or query the BSS type of the interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.InterfaceState">
            <summary>
            Opcode used to query the state of the interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.CurrentConnection">
            <summary>
            Opcode used to query information about the current connection of the interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.ChannelNumber">
            <summary>
            Opcose used to query the current channel on which the wireless interface is operating.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.SupportedInfrastructureAuthCipherPairs">
            <summary>
            Opcode used to query the supported auth/cipher pairs for infrastructure mode.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.SupportedAdhocAuthCipherPairs">
            <summary>
            Opcode used to query the supported auth/cipher pairs for ad hoc mode.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.SupportedCountryOrRegionStringList">
            <summary>
            Opcode used to query the list of supported country or region strings.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.CurrentOperationMode">
            <summary>
            Opcode used to set or query the current operation mode of the wireless interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.Statistics">
            <summary>
            Opcode used to query driver statistics.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanIntfOpcode.RSSI">
            <summary>
            Opcode used to query the received signal strength.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanOpcodeValueType">
            <summary>
            Specifies the origin of automatic configuration (auto config) settings.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_OPCODE_VALUE_TYPE</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanOpcodeValueType.QueryOnly">
            <summary>
            The auto config settings were queried, but the origin of the settings was not determined.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanOpcodeValueType.SetByGroupPolicy">
            <summary>
            The auto config settings were set by group policy.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanOpcodeValueType.SetByUser">
            <summary>
            The auto config settings were set by the user.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanOpcodeValueType.Invalid">
            <summary>
            The auto config settings are invalid.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanGetAvailableNetworkFlags">
            <summary>
            Defines flags passed to <see cref="!:WlanGetAvailableNetworkList"/>.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanGetAvailableNetworkFlags.IncludeAllAdhocProfiles">
            <summary>
            Include all ad-hoc network profiles in the available network list, including profiles that are not visible.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanGetAvailableNetworkFlags.IncludeAllManualHiddenProfiles">
            <summary>
            Include all hidden network profiles in the available network list, including profiles that are not visible.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanAvailableNetworkFlags">
            <summary>
            Contains various flags for the network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetworkFlags.Connected">
            <summary>
            This network is currently connected.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetworkFlags.HasProfile">
            <summary>
            There is a profile for this network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanProfileFlags.AllUser">
            <remarks>
            The only option available on Windows XP SP2.
            </remarks>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanAccess">
            <summary>
            Defines the access mask of an all-user profile.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAccess.ReadAccess">
            <summary>
            The user can view profile permissions.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAccess.ExecuteAccess">
            <summary>
            The user has read access, and the user can also connect to and disconnect from a network using the profile.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAccess.WriteAccess">
            <summary>
            The user has execute access and the user can also modify and delete permissions associated with a profile.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanNotificationSource">
            <summary>
            Specifies where the notification comes from.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationSource.All">
            <summary>
            All notifications, including those generated by the 802.1X module.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationSource.ACM">
            <summary>
            Notifications generated by the auto configuration module.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationSource.MSM">
            <summary>
            Notifications generated by MSM.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationSource.Security">
            <summary>
            Notifications generated by the security module.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationSource.IHV">
            <summary>
            Notifications generated by independent hardware vendors (IHV).
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanNotificationCodeAcm">
            <summary>
            Indicates the type of an ACM (<see cref="F:SimpleWifi.Win32.Interop.WlanNotificationSource.ACM"/>) notification.
            </summary>
            <remarks>
            The enumeration identifiers correspond to the native <c>wlan_notification_acm_</c> identifiers.
            On Windows XP SP2, only the <c>ConnectionComplete</c> and <c>Disconnected</c> notifications are available.
            </remarks>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanNotificationCodeMsm">
            <summary>
            Indicates the type of an MSM (<see cref="F:SimpleWifi.Win32.Interop.WlanNotificationSource.MSM"/>) notification.
            </summary>
            <remarks>
            The enumeration identifiers correspond to the native <c>wlan_notification_msm_</c> identifiers.
            </remarks>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanConnectionFlags">
            <summary>
            Defines connection parameter flags.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionFlags.HiddenNetwork">
            <summary>
            Connect to the destination network even if the destination is a hidden network. A hidden network does not broadcast its SSID. Do not use this flag if the destination network is an ad-hoc network.
            <para>If the profile specified by <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.profile"/> is not <c>null</c>, then this flag is ignored and the nonBroadcast profile element determines whether to connect to a hidden network.</para>
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionFlags.AdhocJoinOnly">
            <summary>
            Do not form an ad-hoc network. Only join an ad-hoc network if the network already exists. Do not use this flag if the destination network is an infrastructure network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionFlags.IgnorePrivacyBit">
            <summary>
            Ignore the privacy bit when connecting to the network. Ignoring the privacy bit has the effect of ignoring whether packets are encryption and ignoring the method of encryption used. Only use this flag when connecting to an infrastructure network using a temporary profile.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionFlags.EapolPassthrough">
            <summary>
            Exempt EAPOL traffic from encryption and decryption. This flag is used when an application must send EAPOL traffic over an infrastructure network that uses Open authentication and WEP encryption. This flag must not be used to connect to networks that require 802.1X authentication. This flag is only valid when <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.wlanConnectionMode"/> is set to <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.TemporaryProfile"/>. Avoid using this flag whenever possible.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanAdhocNetworkState">
            <summary>
            The connection state of an ad hoc network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAdhocNetworkState.Formed">
            <summary>
            The ad hoc network has been formed, but no client or host is connected to the network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAdhocNetworkState.Connected">
            <summary>
            A client or host is connected to the ad hoc network.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanReasonCode">
            <summary>
            Specifies reasons for a failure of a WLAN operation.
            </summary>
            <remarks>
            To get the WLAN API native reason code identifiers, prefix the identifiers with <c>WLAN_REASON_CODE_</c>.
            </remarks>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanInterfaceState">
            <summary>
            Indicates the state of an interface.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_INTERFACE_STATE</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceState.NotReady">
            <summary>
            The interface is not ready to operate.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceState.Connected">
            <summary>
            The interface is connected to a network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceState.AdHocNetworkFormed">
            <summary>
            The interface is the first node in an ad hoc network. No peer has connected.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceState.Disconnecting">
            <summary>
            The interface is disconnecting from the current network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceState.Disconnected">
            <summary>
            The interface is not connected to any network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceState.Associating">
            <summary>
            The interface is attempting to associate with a network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceState.Discovering">
            <summary>
            Auto configuration is discovering the settings for the network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceState.Authenticating">
            <summary>
            The interface is in the process of authenticating.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.Dot11PhyType">
            <summary>
            Defines an 802.11 PHY and media type.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_PHY_TYPE</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.Unknown">
            <summary>
            Specifies an unknown or uninitialized PHY type.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.Any">
            <summary>
            Specifies any PHY type.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.FHSS">
            <summary>
            Specifies a frequency-hopping spread-spectrum (FHSS) PHY. Bluetooth devices can use FHSS or an adaptation of FHSS.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.DSSS">
            <summary>
            Specifies a direct sequence spread spectrum (DSSS) PHY.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.IrBaseband">
            <summary>
            Specifies an infrared (IR) baseband PHY.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.OFDM">
            <summary>
            Specifies an orthogonal frequency division multiplexing (OFDM) PHY. 802.11a devices can use OFDM.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.HRDSSS">
            <summary>
            Specifies a high-rate DSSS (HRDSSS) PHY.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.ERP">
            <summary>
            Specifies an extended rate PHY (ERP). 802.11g devices can use ERP.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.IHV_Start">
            <summary>
            Specifies the start of the range that is used to define PHY types that are developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11PhyType.IHV_End">
            <summary>
            Specifies the end of the range that is used to define PHY types that are developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.Dot11BssType">
            <summary>
            Defines a basic service set (BSS) network type.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_BSS_TYPE</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11BssType.Infrastructure">
            <summary>
            Specifies an infrastructure BSS network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11BssType.Independent">
            <summary>
            Specifies an independent BSS (IBSS) network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11BssType.Any">
            <summary>
            Specifies either infrastructure or IBSS network.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanConnectionMode">
            <summary>
            Defines the mode of connection.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_CONNECTION_MODE</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionMode.Profile">
            <summary>
            A profile will be used to make the connection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionMode.TemporaryProfile">
            <summary>
            A temporary profile will be used to make the connection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionMode.DiscoverySecure">
            <summary>
            Secure discovery will be used to make the connection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionMode.DiscoveryUnsecure">
            <summary>
            Unsecure discovery will be used to make the connection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionMode.Auto">
            <summary>
            A connection will be made automatically, generally using a persistent profile.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionMode.Invalid">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm">
            <summary>
            Defines a wireless LAN authentication algorithm.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_AUTH_ALGORITHM</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.IEEE80211_Open">
            <summary>
            Specifies an IEEE 802.11 Open System authentication algorithm.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.IEEE80211_SharedKey">
            <summary>
            Specifies an 802.11 Shared Key authentication algorithm that requires the use of a pre-shared Wired Equivalent Privacy (WEP) key for the 802.11 authentication.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.WPA">
            <summary>
            Specifies a Wi-Fi Protected Access (WPA) algorithm. IEEE 802.1X port authentication is performed by the supplicant, authenticator, and authentication server. Cipher keys are dynamically derived through the authentication process.
            <para>This algorithm is valid only for BSS types of <see cref="F:SimpleWifi.Win32.Interop.Dot11BssType.Infrastructure"/>.</para>
            <para>When the WPA algorithm is enabled, the 802.11 station will associate only with an access point whose beacon or probe responses contain the authentication suite of type 1 (802.1X) within the WPA information element (IE).</para>
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.WPA_PSK">
            <summary>
            Specifies a WPA algorithm that uses preshared keys (PSK). IEEE 802.1X port authentication is performed by the supplicant and authenticator. Cipher keys are dynamically derived through a preshared key that is used on both the supplicant and authenticator.
            <para>This algorithm is valid only for BSS types of <see cref="F:SimpleWifi.Win32.Interop.Dot11BssType.Infrastructure"/>.</para>
            <para>When the WPA PSK algorithm is enabled, the 802.11 station will associate only with an access point whose beacon or probe responses contain the authentication suite of type 2 (preshared key) within the WPA IE.</para>
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.WPA_None">
            <summary>
            This value is not supported.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.RSNA">
            <summary>
            Specifies an 802.11i Robust Security Network Association (RSNA) algorithm. WPA2 is one such algorithm. IEEE 802.1X port authentication is performed by the supplicant, authenticator, and authentication server. Cipher keys are dynamically derived through the authentication process.
            <para>This algorithm is valid only for BSS types of <see cref="F:SimpleWifi.Win32.Interop.Dot11BssType.Infrastructure"/>.</para>
            <para>When the RSNA algorithm is enabled, the 802.11 station will associate only with an access point whose beacon or probe responses contain the authentication suite of type 1 (802.1X) within the RSN IE.</para>
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.RSNA_PSK">
            <summary>
            Specifies an 802.11i RSNA algorithm that uses PSK. IEEE 802.1X port authentication is performed by the supplicant and authenticator. Cipher keys are dynamically derived through a preshared key that is used on both the supplicant and authenticator.
            <para>This algorithm is valid only for BSS types of <see cref="F:SimpleWifi.Win32.Interop.Dot11BssType.Infrastructure"/>.</para>
            <para>When the RSNA PSK algorithm is enabled, the 802.11 station will associate only with an access point whose beacon or probe responses contain the authentication suite of type 2(preshared key) within the RSN IE.</para>
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.IHV_Start">
            <summary>
            Indicates the start of the range that specifies proprietary authentication algorithms that are developed by an IHV.
            </summary>
            <remarks>
            This enumerator is valid only when the miniport driver is operating in Extensible Station (ExtSTA) mode.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11AuthAlgorithm.IHV_End">
            <summary>
            Indicates the end of the range that specifies proprietary authentication algorithms that are developed by an IHV.
            </summary>
            <remarks>
            This enumerator is valid only when the miniport driver is operating in Extensible Station (ExtSTA) mode.
            </remarks>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm">
            <summary>
            Defines a cipher algorithm for data encryption and decryption.
            </summary>
            <remarks>
            Corresponds to the native <c>DOT11_CIPHER_ALGORITHM</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.None">
            <summary>
            Specifies that no cipher algorithm is enabled or supported.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.WEP40">
            <summary>
            Specifies a Wired Equivalent Privacy (WEP) algorithm, which is the RC4-based algorithm that is specified in the 802.11-1999 standard. This enumerator specifies the WEP cipher algorithm with a 40-bit cipher key.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.TKIP">
            <summary>
            Specifies a Temporal Key Integrity Protocol (TKIP) algorithm, which is the RC4-based cipher suite that is based on the algorithms that are defined in the WPA specification and IEEE 802.11i-2004 standard. This cipher also uses the Michael Message Integrity Code (MIC) algorithm for forgery protection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.CCMP">
            <summary>
            Specifies an AES-CCMP algorithm, as specified in the IEEE 802.11i-2004 standard and RFC 3610. Advanced Encryption Standard (AES) is the encryption algorithm defined in FIPS PUB 197.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.WEP104">
            <summary>
            Specifies a WEP cipher algorithm with a 104-bit cipher key.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.WPA_UseGroup">
            <summary>
            Specifies a Robust Security Network (RSN) Use Group Key cipher suite. For more information about the Use Group Key cipher suite, refer to Clause 7.3.2.9.1 of the IEEE 802.11i-2004 standard.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.RSN_UseGroup">
            <summary>
            Specifies a Wifi Protected Access (WPA) Use Group Key cipher suite. For more information about the Use Group Key cipher suite, refer to Clause 7.3.2.9.1 of the IEEE 802.11i-2004 standard.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.WEP">
            <summary>
            Specifies a WEP cipher algorithm with a cipher key of any length.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.IHV_Start">
            <summary>
            Specifies the start of the range that is used to define proprietary cipher algorithms that are developed by an independent hardware vendor (IHV).
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11CipherAlgorithm.IHV_End">
            <summary>
            Specifies the end of the range that is used to define proprietary cipher algorithms that are developed by an IHV.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.Dot11OperationMode">
            <summary>
            Flags that specifiy the miniport driver's current operation mode.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11OperationMode.ExtensibleStation">
            <summary>
            Specifies that the miniport driver supports the Extensible Station (ExtSTA) operation mode.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11OperationMode.NetworkMonitor">
            <summary>
            Specifies that the miniport driver supports the Network Monitor (NetMon) operation mode.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.SetEapUserDataMode">
            <summary>
            A set of flags that modify the behavior of the function: WlanSetProfileEapUserData
            
            On Windows Vista and Windows Server 2008, this parameter is reserved and should be set to zero.		
            On Windows 7, Windows Server 2008 R2, and later, this parameter can be one of the following values.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanException">
            <summary>
            Represents an error occuring during WLAN operations which indicate their failure via a <see cref="T:SimpleWifi.Win32.Interop.WlanReasonCode"/>.
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.Interop.WlanException.ReasonCode">
            <summary>
            Gets the WLAN reason code.
            </summary>
            <value>The WLAN reason code.</value>
        </member>
        <member name="P:SimpleWifi.Win32.Interop.WlanException.Message">
            <summary>
            Gets a message that describes the reason code.
            </summary>
            <value></value>
            <returns>The error message that explains the reason for the exception, or an empty string("").</returns>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanInterop">
            <summary>
            Defines the Native Wifi API through P/Invoke interop.
            </summary>
            <remarks>
            This class is intended for internal use. Use the <see cref="!:WlanCliient"/> class instead.
            </remarks>
        </member>
        <member name="M:SimpleWifi.Win32.Interop.WlanInterop.WlanScan(System.IntPtr,System.Guid,System.IntPtr,System.IntPtr,System.IntPtr)">
            <param name="pDot11Ssid">Not supported on Windows XP SP2: must be a <c>null</c> reference.</param>
            <param name="pIeData">Not supported on Windows XP SP2: must be a <c>null</c> reference.</param>
        </member>
        <member name="M:SimpleWifi.Win32.Interop.WlanInterop.WlanGetProfile(System.IntPtr,System.Guid,System.String,System.IntPtr,System.IntPtr@,SimpleWifi.Win32.Interop.WlanProfileFlags@,SimpleWifi.Win32.Interop.WlanAccess@)">
            <param name="flags">Not supported on Windows XP SP2: must be a <c>null</c> reference.</param>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanInterop.WlanNotificationCallbackDelegate">
            <summary>
            Defines the callback function which accepts WLAN notifications.
            </summary>
        </member>
        <member name="M:SimpleWifi.Win32.Interop.WlanInterop.ThrowIfError(System.Int32)">
            <summary>
            Helper method to wrap calls to Native WiFi API methods.
            If the method falls, throws an exception containing the error code.
            </summary>
            <param name="win32ErrorCode">The error code.</param>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanAvailableNetworkListHeader">
            <summary>
            The header of an array of information about available networks.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetworkListHeader.numberOfItems">
            <summary>
            Contains the number of <see cref="!:"/> items following the header.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetworkListHeader.index">
            <summary>
            The index of the current item. The index of the first item is 0.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanAvailableNetwork">
            <summary>
            Contains information about an available wireless network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.profileName">
            <summary>
            Contains the profile name associated with the network.
            If the network doesn't have a profile, this member will be empty.
            If multiple profiles are associated with the network, there will be multiple entries with the same SSID in the visible network list. Profile names are case-sensitive.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.dot11Ssid">
            <summary>
            Contains the SSID of the visible wireless network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.dot11BssType">
            <summary>
            Specifies whether the network is infrastructure or ad hoc.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.numberOfBssids">
            <summary>
            Indicates the number of BSSIDs in the network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.networkConnectable">
            <summary>
            Indicates whether the network is connectable or not.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.wlanNotConnectableReason">
            <summary>
            Indicates why a network cannot be connected to. This member is only valid when <see cref="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.networkConnectable"/> is <c>false</c>.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.numberOfPhyTypes">
            <summary>
            The number of PHY types supported on available networks.
            The maximum value of this field is 8. If more than 8 PHY types are supported, <see cref="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.morePhyTypes"/> must be set to <c>true</c>.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.dot11PhyTypes">
            <summary>
            Contains an array of <see cref="T:SimpleWifi.Win32.Interop.Dot11PhyType"/> values that represent the PHY types supported by the available networks.
            When <see cref="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.numberOfPhyTypes"/> is greater than 8, this array contains only the first 8 PHY types.
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.Interop.WlanAvailableNetwork.Dot11PhyTypes">
            <summary>
            Gets the <see cref="T:SimpleWifi.Win32.Interop.Dot11PhyType"/> values that represent the PHY types supported by the available networks.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.morePhyTypes">
            <summary>
            Specifies if there are more than 8 PHY types supported.
            When this member is set to <c>true</c>, an application must call <see cref="!:WlanClient.WlanInterface.GetNetworkBssList"/> to get the complete list of PHY types.
            <see cref="F:SimpleWifi.Win32.Interop.WlanBssEntry.phyId"/> contains the PHY type for an entry.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.wlanSignalQuality">
            <summary>
            A percentage value that represents the signal quality of the network.
            This field contains a value between 0 and 100.
            A value of 0 implies an actual RSSI signal strength of -100 dbm.
            A value of 100 implies an actual RSSI signal strength of -50 dbm.
            You can calculate the RSSI signal strength value for values between 1 and 99 using linear interpolation.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.securityEnabled">
            <summary>
            Indicates whether security is enabled on the network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.dot11DefaultAuthAlgorithm">
            <summary>
            Indicates the default authentication algorithm used to join this network for the first time.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.dot11DefaultCipherAlgorithm">
            <summary>
            Indicates the default cipher algorithm to be used when joining this network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.flags">
            <summary>
            Contains various flags for the network.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAvailableNetwork.reserved">
            <summary>
            Reserved for future use. Must be set to NULL.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanNotificationData">
            <summary>
            Contains information provided when registering for notifications.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_NOTIFICATION_DATA</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationData.notificationSource">
            <summary>
            Specifies where the notification comes from.
            </summary>
            <remarks>
            On Windows XP SP2, this field must be set to <see cref="F:SimpleWifi.Win32.Interop.WlanNotificationSource.None"/>, <see cref="F:SimpleWifi.Win32.Interop.WlanNotificationSource.All"/> or <see cref="F:SimpleWifi.Win32.Interop.WlanNotificationSource.ACM"/>.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationData.notificationCode">
            <summary>
            Indicates the type of notification. The value of this field indicates what type of associated data will be present in <see cref="F:SimpleWifi.Win32.Interop.WlanNotificationData.dataPtr"/>.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationData.interfaceGuid">
            <summary>
            Indicates which interface the notification is for.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationData.dataSize">
            <summary>
            Specifies the size of <see cref="F:SimpleWifi.Win32.Interop.WlanNotificationData.dataPtr"/>, in bytes.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanNotificationData.dataPtr">
            <summary>
            Pointer to additional data needed for the notification, as indicated by <see cref="F:SimpleWifi.Win32.Interop.WlanNotificationData.notificationCode"/>.
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.Interop.WlanNotificationData.NotificationCode">
            <summary>
            Gets the notification code (in the correct enumeration type) according to the notification source.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanConnectionParameters">
            <summary>
            Specifies the parameters used when using the <see cref="!:WlanConnect"/> function.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_CONNECTION_PARAMETERS</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.wlanConnectionMode">
            <summary>
            Specifies the mode of connection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.profile">
            <summary>
            Specifies the profile being used for the connection.
            The contents of the field depend on the <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.wlanConnectionMode"/>:
            <list type="table">
            <listheader>
            <term>Value of <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.wlanConnectionMode"/></term>
            <description>Contents of the profile string</description>
            </listheader>
            <item>
            <term><see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.Profile"/></term>
            <description>The name of the profile used for the connection.</description>
            </item>
            <item>
            <term><see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.TemporaryProfile"/></term>
            <description>The XML representation of the profile used for the connection.</description>
            </item>
            <item>
            <term><see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.DiscoverySecure"/>, <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.DiscoveryUnsecure"/> or <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.Auto"/></term>
            <description><c>null</c></description>
            </item>
            </list>
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.dot11SsidPtr">
            <summary>
            Pointer to a <see cref="T:SimpleWifi.Win32.Interop.Dot11Ssid"/> structure that specifies the SSID of the network to connect to.
            This field is optional. When set to <c>null</c>, all SSIDs in the profile will be tried.
            This field must not be <c>null</c> if <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.wlanConnectionMode"/> is set to <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.DiscoverySecure"/> or <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.DiscoveryUnsecure"/>.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.desiredBssidListPtr">
            <summary>
            Pointer to a <see cref="!:Dot11BssidList"/> structure that contains the list of basic service set (BSS) identifiers desired for the connection.
            </summary>
            <remarks>
            On Windows XP SP2, must be set to <c>null</c>.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.dot11BssType">
            <summary>
            A <see cref="T:SimpleWifi.Win32.Interop.Dot11BssType"/> value that indicates the BSS type of the network. If a profile is provided, this BSS type must be the same as the one in the profile.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionParameters.flags">
            <summary>
            Specifies ocnnection parameters.
            </summary>
            <remarks>
            On Windows XP SP2, must be set to 0.
            </remarks>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanBssEntry">
            <summary>
            Contains information about a basic service set (BSS).
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.dot11Ssid">
            <summary>
            Contains the SSID of the access point (AP) associated with the BSS.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.phyId">
            <summary>
            The identifier of the PHY on which the AP is operating.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.dot11Bssid">
            <summary>
            Contains the BSS identifier.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.dot11BssType">
            <summary>
            Specifies whether the network is infrastructure or ad hoc.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.rssi">
            <summary>
            The received signal strength in dBm.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.linkQuality">
            <summary>
            The link quality reported by the driver. Ranges from 0-100.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.inRegDomain">
            <summary>
            If 802.11d is not implemented, the network interface card (NIC) must set this field to TRUE. If 802.11d is implemented (but not necessarily enabled), the NIC must set this field to TRUE if the BSS operation complies with the configured regulatory domain.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.beaconPeriod">
            <summary>
            Contains the beacon interval value from the beacon packet or probe response.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.timestamp">
            <summary>
            The timestamp from the beacon packet or probe response.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.hostTimestamp">
            <summary>
            The host timestamp value when the beacon or probe response is received.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.capabilityInformation">
            <summary>
            The capability value from the beacon packet or probe response.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.chCenterFrequency">
            <summary>
            The frequency of the center channel, in kHz.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.wlanRateSet">
            <summary>
            Contains the set of data transfer rates supported by the BSS.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.ieOffset">
            <summary>
            Offset of the information element (IE) data blob.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanBssEntry.ieSize">
            <summary>
            Size of the IE data blob, in bytes.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanRateSet">
            <summary>
            Contains the set of supported data rates.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanRateSet.rateSetLength">
            <summary>
            The length, in bytes, of <see cref="F:SimpleWifi.Win32.Interop.WlanRateSet.rateSet"/>.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanRateSet.rateSet">
            <summary>
            An array of supported data transfer rates.
            If the rate is a basic rate, the first bit of the rate value is set to 1.
            A basic rate is the data transfer rate that all stations in a basic service set (BSS) can use to receive frames from the wireless medium.
            </summary>
        </member>
        <member name="M:SimpleWifi.Win32.Interop.WlanRateSet.GetRateInMbps(System.Int32)">
            <summary>
            CalculateS the data transfer rate in Mbps for an arbitrary supported rate.
            </summary>
            <param name="rate"></param>
            <returns></returns>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanConnectionNotificationData">
            <summary>
            Contains information about connection related notifications.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_CONNECTION_NOTIFICATION_DATA</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionNotificationData.wlanConnectionMode">
            <remarks>
            On Windows XP SP 2, only <see cref="F:SimpleWifi.Win32.Interop.WlanConnectionMode.Profile"/> is supported.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionNotificationData.profileName">
            <summary>
            The name of the profile used for the connection. Profile names are case-sensitive.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionNotificationData.dot11Ssid">
            <summary>
            The SSID of the association.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionNotificationData.dot11BssType">
            <summary>
            The BSS network type.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionNotificationData.securityEnabled">
            <summary>
            Indicates whether security is enabled for this connection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionNotificationData.wlanReasonCode">
            <summary>
            Indicates the reason for an operation failure.
            This field has a value of <see cref="F:SimpleWifi.Win32.Interop.WlanReasonCode.Success"/> for all connection-related notifications except <see cref="F:SimpleWifi.Win32.Interop.WlanNotificationCodeAcm.ConnectionComplete"/>.
            If the connection fails, this field indicates the reason for the failure.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionNotificationData.profileXml">
            <summary>
            This field contains the XML presentation of the profile used for discovery, if the connection succeeds.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.Dot11Ssid">
            <summary>
            Contains the SSID of an interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11Ssid.SSIDLength">
            <summary>
            The length, in bytes, of the <see cref="F:SimpleWifi.Win32.Interop.Dot11Ssid.SSID"/> array.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.Dot11Ssid.SSID">
            <summary>
            The SSID.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanAssociationAttributes">
            <summary>
            Contains association attributes for a connection
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_ASSOCIATION_ATTRIBUTES</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAssociationAttributes.dot11Ssid">
            <summary>
            The SSID of the association.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAssociationAttributes.dot11BssType">
            <summary>
            Specifies whether the network is infrastructure or ad hoc.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAssociationAttributes.dot11Bssid">
            <summary>
            The BSSID of the association.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAssociationAttributes.dot11PhyType">
            <summary>
            The physical type of the association.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAssociationAttributes.dot11PhyIndex">
            <summary>
            The position of the <see cref="T:SimpleWifi.Win32.Interop.Dot11PhyType"/> value in the structure containing the list of PHY types.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAssociationAttributes.wlanSignalQuality">
            <summary>
            A percentage value that represents the signal quality of the network.
            This field contains a value between 0 and 100.
            A value of 0 implies an actual RSSI signal strength of -100 dbm.
            A value of 100 implies an actual RSSI signal strength of -50 dbm.
            You can calculate the RSSI signal strength value for values between 1 and 99 using linear interpolation.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAssociationAttributes.rxRate">
            <summary>
            The receiving rate of the association.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanAssociationAttributes.txRate">
            <summary>
            The transmission rate of the association.
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.Interop.WlanAssociationAttributes.Dot11Bssid">
            <summary>
            Gets the BSSID of the associated access point.
            </summary>
            <value>The BSSID.</value>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanSecurityAttributes">
            <summary>
            Defines the security attributes for a wireless connection.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_SECURITY_ATTRIBUTES</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanSecurityAttributes.securityEnabled">
            <summary>
            Indicates whether security is enabled for this connection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanSecurityAttributes.dot11AuthAlgorithm">
            <summary>
            The authentication algorithm.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanSecurityAttributes.dot11CipherAlgorithm">
            <summary>
            The cipher algorithm.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanConnectionAttributes">
            <summary>
            Defines the attributes of a wireless connection.
            </summary>
            <remarks>
            Corresponds to the native <c>WLAN_CONNECTION_ATTRIBUTES</c> type.
            </remarks>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionAttributes.isState">
            <summary>
            The state of the interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionAttributes.wlanConnectionMode">
            <summary>
            The mode of the connection.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionAttributes.profileName">
            <summary>
            The name of the profile used for the connection. Profile names are case-sensitive.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionAttributes.wlanAssociationAttributes">
            <summary>
            The attributes of the association.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanConnectionAttributes.wlanSecurityAttributes">
            <summary>
            The security attributes of the connection.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanInterfaceInfo">
            <summary>
            Contains information about a LAN interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceInfo.interfaceGuid">
            <summary>
            The GUID of the interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceInfo.interfaceDescription">
            <summary>
            The description of the interface.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanInterfaceInfo.isState">
            <summary>
            The current state of the interface.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanInterfaceInfoListHeader">
            <summary>
            The header of the list returned by <see cref="!:WlanEnumInterfaces"/>.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanProfileInfoListHeader">
            <summary>
            The header of the list returned by <see cref="!:WlanGetProfileList"/>.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.Interop.WlanProfileInfo">
            <summary>
            Contains basic information about a profile.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanProfileInfo.profileName">
            <summary>
            The name of the profile. This value may be the name of a domain if the profile is for provisioning. Profile names are case-sensitive.
            </summary>
        </member>
        <member name="F:SimpleWifi.Win32.Interop.WlanProfileInfo.profileFlags">
            <summary>
            Profile flags.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.WlanClient">
            <summary>
            Represents a client to the Zeroconf (Native Wifi) service.
            </summary>
            <remarks>
            This class is the entrypoint to Native Wifi management. To manage WiFi settings, create an instance
            of this class.
            </remarks>
        </member>
        <member name="M:SimpleWifi.Win32.WlanClient.#ctor">
            <summary>
            Creates a new instance of a Native Wifi service client.
            Throws Win32 errors: ERROR_INVALID_PARAMETER, ERROR_NOT_ENOUGH_MEMORY, RPC_STATUS, ERROR_REMOTE_SESSION_LIMIT_EXCEEDED.
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.WlanClient.Interfaces">
            <summary>
            Gets the WLAN interfaces.
            
            Possible Win32 exceptions:
            
            ERROR_INVALID_PARAMETER: A parameter is incorrect. This error is returned if the hClientHandle or ppInterfaceList parameter is NULL. This error is returned if the pReserved is not NULL. This error is also returned if the hClientHandle parameter is not valid.
            ERROR_INVALID_HANDLE: The handle hClientHandle was not found in the handle table.
            RPC_STATUS: Various error codes.
            ERROR_NOT_ENOUGH_MEMORY: Not enough memory is available to process this request and allocate memory for the query results.
            </summary>
            <value>The WLAN interfaces.</value>
        </member>
        <member name="T:SimpleWifi.Win32.WlanInterface">
            <summary>
            Represents a Wifi network interface.
            </summary>
        </member>
        <member name="T:SimpleWifi.Win32.WlanInterface.WlanNotificationEventHandler">
            <summary>
            Represents a method that will handle <see cref="E:SimpleWifi.Win32.WlanInterface.WlanNotification"/> events.
            </summary>
            <param name="notifyData">The notification data.</param>
        </member>
        <member name="T:SimpleWifi.Win32.WlanInterface.WlanConnectionNotificationEventHandler">
            <summary>
            Represents a method that will handle <see cref="E:SimpleWifi.Win32.WlanInterface.WlanConnectionNotification"/> events.
            </summary>
            <param name="notifyData">The notification data.</param>
            <param name="connNotifyData">The notification data.</param>
        </member>
        <member name="T:SimpleWifi.Win32.WlanInterface.WlanReasonNotificationEventHandler">
            <summary>
            Represents a method that will handle <see cref="E:SimpleWifi.Win32.WlanInterface.WlanReasonNotification"/> events.
            </summary>
            <param name="notifyData">The notification data.</param>
            <param name="reasonCode">The reason code.</param>
        </member>
        <member name="E:SimpleWifi.Win32.WlanInterface.WlanNotification">
            <summary>
            Occurs when an event of any kind occurs on a WLAN interface.
            </summary>
        </member>
        <member name="E:SimpleWifi.Win32.WlanInterface.WlanConnectionNotification">
            <summary>
            Occurs when a WLAN interface changes connection state.
            </summary>
        </member>
        <member name="E:SimpleWifi.Win32.WlanInterface.WlanReasonNotification">
            <summary>
            Occurs when a WLAN operation fails due to some reason.
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.Autoconf">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:SimpleWifi.Win32.WlanInterface"/> is automatically configured.
            </summary>
            <value><c>true</c> if "autoconf" is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.NetworkInterface">
            <summary>
            Gets the network interface of this wireless interface.
            </summary>
            <remarks>
            The network interface allows querying of generic network properties such as the interface's IP address.
            </remarks>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.InterfaceGuid">
            <summary>
            The GUID of the interface (same content as the <see cref="P:System.Net.NetworkInformation.NetworkInterface.Id"/> value).
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.InterfaceDescription">
            <summary>
            The description of the interface.
            This is a user-immutable string containing the vendor and model name of the adapter.
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.InterfaceName">
            <summary>
            The friendly name given to the interface by the user (e.g. "Local Area Network Connection").
            </summary>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.BssType">
            <summary>
            Gets or sets the BSS type for the indicated interface.
            </summary>
            <value>The type of the BSS.</value>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.InterfaceState">
            <summary>
            Gets the state of the interface.
            </summary>
            <value>The state of the interface.</value>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.Channel">
            <summary>
            Gets the channel.
            </summary>
            <value>The channel.</value>
            <remarks>Not supported on Windows XP SP2.</remarks>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.RSSI">
            <summary>
            Gets the RSSI.
            </summary>
            <value>The RSSI.</value>
            <remarks>Not supported on Windows XP SP2.</remarks>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.CurrentOperationMode">
            <summary>
            Gets the current operation mode.
            </summary>
            <value>The current operation mode.</value>
            <remarks>Not supported on Windows XP SP2.</remarks>
        </member>
        <member name="P:SimpleWifi.Win32.WlanInterface.CurrentConnection">
            <summary>
            Gets the attributes of the current connection.
            </summary>
            <value>The current connection attributes.</value>
            <exception cref="!:Win32Exception">An exception with code 0x0000139F (The group or resource is not in the correct state to perform the requested operation.) will be thrown if the interface is not connected to a network.</exception>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.Scan">
            <summary>
            Requests a scan for available networks.
            </summary>
            <remarks>
            The method returns immediately. Progress is reported through the <see cref="E:SimpleWifi.Win32.WlanInterface.WlanNotification"/> event.
            </remarks>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.ConvertAvailableNetworkListPtr(System.IntPtr)">
            <summary>
            Converts a pointer to a available networks list (header + entries) to an array of available network entries.
            </summary>
            <param name="bssListPtr">A pointer to an available networks list's header.</param>
            <returns>An array of available network entries.</returns>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.GetAvailableNetworkList(SimpleWifi.Win32.Interop.WlanGetAvailableNetworkFlags)">
            <summary>
            Retrieves the list of available networks.
            </summary>
            <param name="flags">Controls the type of networks returned.</param>
            <returns>A list of the available networks.</returns>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.ConvertBssListPtr(System.IntPtr)">
            <summary>
            Converts a pointer to a BSS list (header + entries) to an array of BSS entries.
            </summary>
            <param name="bssListPtr">A pointer to a BSS list's header.</param>
            <returns>An array of BSS entries.</returns>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.GetNetworkBssList">
            <summary>
            Retrieves the basic service sets (BSS) list of all available networks.
            </summary>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.GetNetworkBssList(SimpleWifi.Win32.Interop.Dot11Ssid,SimpleWifi.Win32.Interop.Dot11BssType,System.Boolean)">
            <summary>
            Retrieves the basic service sets (BSS) list of the specified network.
            </summary>
            <param name="ssid">Specifies the SSID of the network from which the BSS list is requested.</param>
            <param name="bssType">Indicates the BSS type of the network.</param>
            <param name="securityEnabled">Indicates whether security is enabled on the network.</param>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.Connect(SimpleWifi.Win32.Interop.WlanConnectionParameters)">
            <summary>
            Connects to a network defined by a connection parameters structure.
            </summary>
            <param name="connectionParams">The connection paramters.</param>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.Connect(SimpleWifi.Win32.Interop.WlanConnectionMode,SimpleWifi.Win32.Interop.Dot11BssType,System.String)">
            <summary>
            Requests a connection (association) to the specified wireless network.
            </summary>
            <remarks>
            The method returns immediately. Progress is reported through the <see cref="E:SimpleWifi.Win32.WlanInterface.WlanNotification"/> event.
            </remarks>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.ConnectSynchronously(SimpleWifi.Win32.Interop.WlanConnectionMode,SimpleWifi.Win32.Interop.Dot11BssType,System.String,System.Int32)">
            <summary>
            Connects (associates) to the specified wireless network, returning either on a success to connect
            or a failure.
            </summary>
            <param name="connectionMode"></param>
            <param name="bssType"></param>
            <param name="profile"></param>
            <param name="connectTimeout"></param>
            <returns></returns>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.Connect(SimpleWifi.Win32.Interop.WlanConnectionMode,SimpleWifi.Win32.Interop.Dot11BssType,SimpleWifi.Win32.Interop.Dot11Ssid,SimpleWifi.Win32.Interop.WlanConnectionFlags)">
            <summary>
            Connects to the specified wireless network.
            </summary>
            <remarks>
            The method returns immediately. Progress is reported through the <see cref="E:SimpleWifi.Win32.WlanInterface.WlanNotification"/> event.
            </remarks>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.DeleteProfile(System.String)">
            <summary>
            Deletes a profile.
            </summary>
            <param name="profileName">
            The name of the profile to be deleted. Profile names are case-sensitive.
            On Windows XP SP2, the supplied name must match the profile name derived automatically from the SSID of the network. For an infrastructure network profile, the SSID must be supplied for the profile name. For an ad hoc network profile, the supplied name must be the SSID of the ad hoc network followed by <c>-adhoc</c>.
            </param>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.SetProfile(SimpleWifi.Win32.Interop.WlanProfileFlags,System.String,System.Boolean)">
            <summary>
            Sets the profile.
            </summary>
            <param name="flags">The flags to set on the profile.</param>
            <param name="profileXml">The XML representation of the profile. On Windows XP SP 2, special care should be taken to adhere to its limitations.</param>
            <param name="overwrite">If a profile by the given name already exists, then specifies whether to overwrite it (if <c>true</c>) or return an error (if <c>false</c>).</param>
            <returns>The resulting code indicating a success or the reason why the profile wasn't valid.</returns>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.GetProfileXml(System.String)">
            <summary>
            Gets the profile's XML specification.
            </summary>
            <param name="profileName">The name of the profile.</param>
            <returns>The XML document.</returns>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.GetProfiles">
            <summary>
            Gets the information of all profiles on this interface.
            </summary>
            <returns>The profiles information.</returns>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.EnqueueEvent(System.Object)">
            <summary>
            Enqueues a notification event to be processed serially.
            </summary>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.SetInterfaceInt(SimpleWifi.Win32.Interop.WlanIntfOpcode,System.Int32)">
            <summary>
            Sets a parameter of the interface whose data type is <see cref="T:System.Int32"/>.
            
            Possible Win32 errors:
            ERROR_ACCESS_DENIED: The caller does not have sufficient permissions to perform the requested operation.
            ERROR_GEN_FAILURE: The parameter specified by OpCode is not supported by the driver or NIC.
            ERROR_INVALID_HANDLE: The handle hClientHandle was not found in the handle table.
            ERROR_INVALID_PARAMETER: One parameter is likely NULL
            RPC_STATUS: Various return codes to indicate errors occurred when connecting.
            </summary>
            <param name="opCode">The opcode of the parameter.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:SimpleWifi.Win32.WlanInterface.GetInterfaceInt(SimpleWifi.Win32.Interop.WlanIntfOpcode)">
            <summary>
            Gets a parameter of the interface whose data type is <see cref="T:System.Int32"/>.
            
            Possible Win32 errors:
            ERROR_ACCESS_DENIED: The caller does not have sufficient permissions to perform the requested operation.
            ERROR_INVALID PARAMETER: hClientHandle is NULL or invalid, pInterfaceGuid is NULL, pReserved is not NULL, ppData is NULL, or pdwDataSize is NULL.
            ERROR_INVALID_HANDLE: The handle hClientHandle was not found in the handle table.
            ERROR_INVALID_STATE: OpCode is set to wlan_intf_opcode_current_connection and the client is not currently connected to a network.
            ERROR_NOT_ENOUGH_MEMORY: Failed to allocate memory for the query results.
            RPC_STATUS: Various error codes.
            </summary>
            <param name="opCode">The opcode of the parameter.</param>
            <returns>The integer value.</returns>
        </member>
    </members>
</doc>
